import React from "react";
import "./globals.css";

export default function Layout({ children }: { children: React.ReactNode }) {
  return (
    <html>
      <body>{children}</body>
    </html>
  );
}

// "use client";
// import "./globals.css";
// // import type { Metadata } from "next";
// import { Inter } from "next/font/google";
// import Footer from "./footer/page";
// import { UserProvider } from "@/context/UserContext";
// import { createContext, useEffect, useState } from "react";
// import { getCurrentUser } from "@/utils/auth";
// import { useRouter } from "next/navigation";

// const inter = Inter({ subsets: ["latin"] });

// // export const metadata: Metadata = {
// //   title: "Create Next App",
// //   description: "Generated by create next app"
// // };
// export interface User {
//   id: number;
//   email: string;
//   name: string;
// }

// export const AuthContext = createContext(
//   {} as {
//     loading: boolean;
//     setLoading: React.Dispatch<React.SetStateAction<boolean>>;
//     isSignedIn: boolean;
//     setIsSignedIn: React.Dispatch<React.SetStateAction<boolean>>;
//     currentUser: User | undefined;
//     setCurrentUser: React.Dispatch<React.SetStateAction<User | undefined>>;
//   }
// );

// export default function Layout({ children }: { children: React.ReactNode }) {
//   const [loading, setLoading] = useState<boolean>(true);
//   const [isSignedIn, setIsSignedIn] = useState<boolean>(false);
//   const [currentUser, setCurrentUser] = useState<User | undefined>();

//   // 認証済みのユーザーがいるかどうかチェック
//   // 確認できた場合はそのユーザーの情報を取得
//   const handleGetCurrentUser = async () => {
//     try {
//       const res = await getCurrentUser();

//       if (res?.data.isLogin === true) {
//         setIsSignedIn(true);
//         setCurrentUser(res?.data.data);

//         console.log(res?.data.data);
//       } else {
//         console.log("No current user");
//       }
//     } catch (err) {
//       console.log(err);
//     }

//     setLoading(false);
//   };

//   useEffect(() => {
//     handleGetCurrentUser();
//   }, [setCurrentUser]);

//   const router = useRouter();
//   if (!loading) {
//     if (isSignedIn) {
//       return children;
//     } else {
//       return router.push("http://localhost:3000/login");
//     }
//   } else {
//     return <></>;
//   }

//   return (
//     <html lang="en">
//       {/* <UserProvider> */}
//       <AuthContext.Provider
//         value={{
//           loading,
//           setLoading,
//           isSignedIn,
//           setIsSignedIn,
//           currentUser,
//           setCurrentUser
//         }}
//       >
//         <head>
//           <meta charSet="utf-8" />
//           <title></title>
//         </head>
//         <body className={inter.className}>
//           {children}
//           <footer>
//             <Footer />
//           </footer>
//         </body>
//       </AuthContext.Provider>

//       {/* </UserProvider> */}
//     </html>
//   );
// }
